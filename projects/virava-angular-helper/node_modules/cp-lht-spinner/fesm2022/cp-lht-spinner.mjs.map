{"version":3,"file":"cp-lht-spinner.mjs","sources":["../../../projects/cp-lht-spinner/src/lib/services/lht-spinner-settings.service.ts","../../../projects/cp-lht-spinner/src/lib/component/lht-spinner.component.ts","../../../projects/cp-lht-spinner/src/lib/component/lht-spinner.component.html","../../../projects/cp-lht-spinner/src/lib/lht-spinner.module.ts","../../../projects/cp-lht-spinner/src/lib/services/lht-loading.service.ts","../../../projects/cp-lht-spinner/src/public-api.ts","../../../projects/cp-lht-spinner/src/cp-lht-spinner.ts"],"sourcesContent":["import { Injectable, Inject } from '@angular/core';\n\nimport { LhtSpinnerLibConfig } from '../models/lht-spinner-lib-config';\n\n@Injectable()\nexport class LhtSpinnerSettingsService {\n  constructor(@Inject('config') private config: LhtSpinnerLibConfig) {}\n\n  get libConfig() {\n    return this.config;\n  }\n\n  setLibConfig(newConfig: LhtSpinnerLibConfig) {\n    this.config = { ...this.config, ...newConfig };\n  }\n}\n","import { Component } from '@angular/core';\n\nimport { LhtSpinnerSettingsService } from '../services/lht-spinner-settings.service';\n\n@Component({\n  selector: 'lht-spinner',\n  templateUrl: './lht-spinner.component.html',\n  styleUrls: ['./lht-spinner.component.scss'],\n})\nexport class LhtSpinnerComponent {\n  constructor(private lhtSpinnerSettingsService: LhtSpinnerSettingsService) {}\n\n  size = this.lhtSpinnerSettingsService.libConfig.spinnerSize || 100;\n  loadingText =\n    this.lhtSpinnerSettingsService.libConfig.spinnerLoadingText || 'Loading...';\n}\n","<div class=\"spinner-wrapper\">\n  <div class=\"spinner\">\n    <svg\n      [style.width]=\"size\"\n      [style.height]=\"size\"\n      class=\"lht-spinner-ring\"\n      viewBox=\"0 0 38 38\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      stroke=\"#0a1d3d\"\n    >\n      <g fill=\"none\" fill-rule=\"evenodd\">\n        <g transform=\"translate(1 1)\" stroke-width=\"2\">\n          <circle stroke-opacity=\".5\" cx=\"18\" cy=\"18\" r=\"18\" />\n          <path d=\"M36 18c0-9.94-8.06-18-18-18\"></path>\n        </g>\n      </g>\n    </svg>\n    <svg\n      [style.width]=\"size\"\n      [style.height]=\"size\"\n      id=\"crane\"\n      version=\"1.0\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 880 880\"\n      preserveAspectRatio=\"xMidYMid meet\"\n    >\n      <g\n        fill=\"#0a1d3d\"\n        stroke=\"none\"\n        transform=\"translate(0,880) scale(0.1,-0.1)\"\n      >\n        <path\n          d=\"M870 5348 l0 -103 133 -59 c217 -97 641 -309 807 -404 258 -148 453 -271 955 -602 264 -175 548 -358 630 -408 876 -524 1879 -920 2833 -1118 l133 -28 142 142 142 142 -105 0 c-485 0 -1046 152 -1483 403 -193 110 -330 210 -506 367 -120 108 -122 95 37 183 387 214 781 331 1237 368 162 13 641 7 822 -10 55 -6 134 -13 175 -17 l74 -6 88 83 c60 57 83 85 74 89 -15 9 -136 24 -358 46 -212 21 -923 30 -1145 15 -92 -7 -168 -11 -170 -9 -2 2 27 35 64 75 l67 72 279 7 c393 9 853 -15 1235 -66 80 -11 151 -20 159 -20 13 0 181 157 181 170 0 8 -322 54 -525 74 -264 28 -461 38 -811 45 l-352 6 47 62 46 63 200 0 c327 0 734 -26 1045 -66 149 -19 437 -64 454 -70 13 -5 201 164 192 173 -7 8 -346 61 -556 87 -337 43 -688 67 -1126 79 l-82 2 37 63 36 64 218 -6 c469 -13 1131 -81 1507 -155 l95 -19 90 88 c49 49 86 92 83 96 -24 23 -846 140 -1193 169 -562 47 -1206 47 -1624 2 l-106 -12 -39 -75 c-138 -268 -276 -462 -455 -641 -393 -392 -851 -519 -1341 -373 -107 32 -270 99 -391 159 -97 49 -589 322 -601 333 -4 4 10 19 31 34 l37 26 434 -188 434 -188 58 46 c32 25 55 49 51 53 -8 7 -1688 779 -1696 779 -3 0 -43 -31 -91 -69 l-86 -69 -242 104 c-133 57 -250 106 -260 110 -17 5 -18 -3 -18 -98z\"\n        ></path>\n      </g>\n    </svg>\n\n    <span class=\"spinner-text\">{{ loadingText }}</span>\n  </div>\n</div>\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { LhtSpinnerComponent } from './component/lht-spinner.component';\n\nimport { LhtSpinnerLibConfig } from './models/lht-spinner-lib-config';\n\nimport { LhtSpinnerSettingsService } from '../lib/services/lht-spinner-settings.service';\n\n@NgModule({\n  declarations: [LhtSpinnerComponent],\n  imports: [],\n  exports: [LhtSpinnerComponent],\n})\nexport class LhtSpinnerModule {\n  static forRoot(\n    config: LhtSpinnerLibConfig\n  ): ModuleWithProviders<LhtSpinnerModule> {\n    return {\n      ngModule: LhtSpinnerModule,\n      providers: [\n        LhtSpinnerSettingsService,\n        { provide: 'config', useValue: config },\n      ],\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\n\nimport { LhtSpinnerComponent } from '../component/lht-spinner.component';\n\nimport { LhtSpinnerSettingsService } from './lht-spinner-settings.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LhtLoadingService {\n  private overlayRef: OverlayRef | null = null;\n  private requestsCount = 0;\n  private showTimer: any = null;\n\n  constructor(\n    private overlay: Overlay,\n    private lhtSpinnerSettingsService: LhtSpinnerSettingsService\n  ) {}\n\n  show(spinnerLoadingText?: string): void {\n    this.requestsCount++;\n\n    const delayTime =\n      this.lhtSpinnerSettingsService.libConfig.spinnerDelayTime || 0;\n\n    if (spinnerLoadingText) {\n      this.lhtSpinnerSettingsService.setLibConfig({\n        ...this.lhtSpinnerSettingsService.libConfig,\n        spinnerLoadingText,\n      });\n    }\n\n    if (!this.overlayRef) {\n      this.overlayRef = this.overlay.create();\n    }\n\n    if (this.showTimer === null) {\n      if (delayTime > 0) {\n        this.showTimer = setTimeout(() => {\n          this.attachSpinner();\n        }, delayTime);\n      } else {\n        this.attachSpinner();\n      }\n    }\n  }\n\n  hide(): void {\n    this.requestsCount--;\n\n    if (this.requestsCount <= 0) {\n      if (this.showTimer !== null) {\n        clearTimeout(this.showTimer);\n        this.showTimer = null;\n      }\n\n      this.requestsCount = 0;\n\n      if (this.overlayRef && this.overlayRef.hasAttached()) {\n        this.overlayRef.detach();\n      }\n    }\n  }\n\n  private attachSpinner(): void {\n    if (this.overlayRef && !this.overlayRef.hasAttached()) {\n      const loaderPortal = new ComponentPortal(LhtSpinnerComponent);\n      this.overlayRef.attach(loaderPortal);\n    }\n\n    this.showTimer = null;\n  }\n}\n","/*\n * Public API Surface of cp-lht-spinner\n */\n\nexport * from './lib/component/lht-spinner.component';\nexport * from './lib/lht-spinner.module';\nexport * from './lib/services/lht-loading.service';\nexport * from './lib/services/lht-spinner-settings.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.LhtSpinnerSettingsService","i2.LhtSpinnerSettingsService"],"mappings":"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"}